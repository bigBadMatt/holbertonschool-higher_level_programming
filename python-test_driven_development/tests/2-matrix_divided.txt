The ``matrix_divided`` module
======================

using ``matrix_divided()``
-------------------

Importing function from the module:
	 >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Function Tests:

	 Divide a matrix of positive ints by an int:
	 >>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 3))
	 [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	 Divide a matrix of positive ints by 0:
	 >>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 0))
	 Traceback (most recent call last):
	 ...
	 ZeroDivisionError: division by zero

	 A matrix of unequal lengths:
	 >>> matrix_divided([[1, 2, 3], [4, 5]], 3)
	 Traceback (most recent call last):
	 ...
	 TypeError: Each row of the matrix must have the same size

	 A mathix containing a string:
	 matrix_divided([[1, 2, 3], [4, 5, "Matt"]], 3)
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix must be a matrix (list of lists) of integers/floats

	 A matrix divided by a string:
	 matrix_divided([[1, 2, 3], [4, 5, 6]], "Matt")
	 Traceback (most recent call last):
	 ...
	 TypeError: div must be a number

	 Missing div argument:
	 >>> matrix_divided([[1, 2, 3], [4, 5, 6]])
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_divided() missing 1 required positional argument: 'div
